"""
DFS(깊이 우선 탐색)

. 깊은 부분을 우선적으로 탐색하는 알고리즘
. 스택 자료구조(혹은 재귀함수)이용
    - 탐색 시작 노드를 스택에 삽입하고 방문 처리를 함
    - 스택의 최상단 노드에 방문하지 않은 인접한 노드가 하나라도 있으면
       그 노드를 스택에 넣고 방문처리함. 방문하지 않은 인접 노드가 없으면 스택에서 최상단 노드를 꺼냄.
    - 더 이상 2번의 과정을 수행할 수 없을 때까지 반복

. DFS 동작 예시
    - 그래프 준비(방문 기준 : 번호가 낮은 인접 노드부터)
    - 시작 노드 스택에 삽입
    - 최상단 노드에 방문하지 않은 인접 노드 중 가장 작은 노드 삽입(방문)
    
"""

def dfs(graph, v, visited):
    # 현재 노드를 방문 처리
    visited[v] = True
    print(v, end = ' ')
    # 현재 노드와 연결된 다른 노드를 재귀적으로 방문
    for i in graph[v]:
        if not visited[i]:
            dfs(graph, i, visited)

# 각 노드가 연결된 정보(2차원 리스트)
graph = [
    [],             # 노드가 1번부터 출발하는 경우 비워둔다.
    [2, 3, 8],      # 1의 인접노드
    [1, 7],         # 2의 인접노드
    [1, 4, 5],      # 3의 인접노드
    [3, 5],
    [3, 4],
    [7],
    [2, 6, 8],
    [1, 7]
]

# 각 노드가 방문된 정보
visited = [False] * 9
dfs(graph, 1, visited)      # 1 2 7 6 8 3 4 5